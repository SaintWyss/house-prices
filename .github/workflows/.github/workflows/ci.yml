name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint-and-notebooks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8 nbqa black

      # Errores graves de Python (evita subir código roto)
      - name: Lint (fatal errors)
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      # Avisos suaves sobre notebooks (no hace fallar el build por estilo)
      - name: Lint notebooks with nbqa (soft)
        run: |
          if [ -d notebooks ]; then nbqa flake8 notebooks --extend-ignore=E501 || true; fi

      # Verifica que los .ipynb sean JSON válidos (sin ejecutar)
      - name: Validate notebooks JSON
        run: |
          python - <<'PY'
          import json, glob, sys
          ok=True
          for p in glob.glob('notebooks/*.ipynb'):
            try:
              with open(p, 'r', encoding='utf-8') as f:
                json.load(f)
              print(f"✓ {p}")
            except Exception as e:
              print(f"ERROR {p}: {e}")
              ok=False
          sys.exit(0 if ok else 1)
          PY
